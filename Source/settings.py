"""
Django settings for Source project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5g7g3ivmnov4krwlt_+#g!t8voijusmvvx1@3ba#pivkp*vlou'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

import os
# This is used to set the allowed hosts, in production, you should set it to your domain name
if 'DJANGO_ALLOWED_HOSTS' in os.environ:
    ALLOWED_HOSTS = os.environ['DJANGO_ALLOWED_HOSTS'].split(',')
else:
    # For development purposes, we can set it to an empty list
    ALLOWED_HOSTS = ["*", "localhost", "localhost:9002"]

if 'DJANGO_CORS_ALLOWED_ORIGINS' in os.environ:
    CORS_ALLOWED_ORIGINS = os.environ['DJANGO_CORS_ALLOWED_ORIGINS'].split(',')
else:
    CORS_ALLOW_ALL_ORIGINS = True

from datetime import timedelta
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=24),  # Durée de vie du token d'accès
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),  # Durée de vie du token de rafraîchissement
    'ALGORITHM': 'HS256',
    'VERIFYING_KEY': None,  # utilisé pour vérifier les tokens entrants
    #'SIGNING_KEY': 'super-secret-key-used-for-signing',  # utilisée pour signer les tokens sortants
    #'TOKEN_BACKEND_CLASS': 'Json-Web-Token-with-Django-API.Core.Auth.backend.UnsafeTokenBackend',
}


###################################
# Modified Fields Start from here #
###################################

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # This is used to set the CORS headers, so that we can access the API from other domains

    ############ Externals packages ############
    'rest_framework',
    'rest_framework_simplejwt',

    ############ Added App ############
    'Core',
    'Core.Auth',
    'Blog',
    'Beats',
]

# Now, we are setting an Authentication with APi, We need to set the Default \
# Authentication on Rest_Framework_simplejwt :

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':(
        #'Core.Auth.backend.UnsafeTokenBackend',
        #'rest_framework_simplejwt.authentication.JWTAuthentication',
        
    ),
    'DEFAULT_FILTER_BACKENDS':[
        'django_filters.rest_framework.DjangoFilterBackend' ],
}

AUTH_USER_MODEL = 'Core.User'

###################################
#  Modified Fields END from here  #
###################################

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # This is used to set the CORS headers, so that we can access the API from other domains
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Source.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Source.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

""" DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
} """
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'beatdb',
        'USER': 'beatuser',
        'PASSWORD': 'beatpass',
        'HOST': 'mysql-vuln',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Serve media files from /beats/audio/
MEDIA_URL = '/beats/audio/'
MEDIA_ROOT = os.path.join(BASE_DIR)